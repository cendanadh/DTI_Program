# -*- coding: utf-8 -*-
"""Capstone Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iubW6QDuPT8NzwQJZvq6aIwzD9sSufwU

# Defining The Data Structure
"""

#Dictionary for the car data
database_car = {
    1:{'Manufacturer':'Toyota', 'Model':'Camry', 'Color':'Black', 'Plate':'B 7282 AA', 'Price':300000},
    2:{'Manufacturer':'Honda', 'Model':'Jazz', 'Color':'Red', 'Plate':'B 2333 PU', 'Price':250000},
    3:{'Manufacturer':'Honda', 'Model':'Jazz', 'Color':'Blue', 'Plate':'B 1231 ZZ', 'Price':210000}}

#These list are used for input checking
car_manufacturer_list = ['Honda', 'Toyota', 'BMW', 'Hyundai', 'Mitsubhisi', 'Daihatsu', 'Tesla']
car_model_list = ['Jazz', 'City', 'Accord', 'Brio', 'Vios', 'Camry', 'Alphard', 'Sigra', 'Cayla', 'Alya']
car_color_list = ['Black','Red', 'White', 'Green', 'Blue', 'Yellow', 'Orange']

#Predefined User
database_user = {1:'andi', 2:'budi'}
current_user = 1

#Dictionary Availability, shorten to ava
#This data structure is used for relation between Car database dan User Database
database_ava = {1:{'User':1,'Duration':14}}

"""# 0. Main Function"""

#This is the main function
#Main function job is to bridge between User and Admin
def main():
  global current_user

  print()
  print('     0. Main Function')
  print('Welcome to the Car Rental App!')
  print("Input '1' --> User View")
  print("Input '2' --> Admin View")
  print("Input '3' --> Set User Name")
  user_input = input('Input: ')

  if user_input == '1':
    user_main()

  elif user_input == '2':
    admin_main()

  elif user_input == '3':
    setting_name()

"""# 3. setting user name"""

def setting_name():
  global current_user
  flag = 0
  user_key = max(list(database_user.keys()))+1
  user_name = input('Enter your name: ')

  for x,y in database_user.items():
    if y == user_name:
      current_user = x
      print(current_user)
      flag = 1
    else:
      continue

  if flag == 0:
    database_user[user_key]=user_name
    current_user = user_key

"""# 2. Admin View"""

def admin_main():
  print()
  print('     1. User View')
  print('Welcome Admin\n')

  print("Input '0' --> 0. Main Function")
  print("Input '1' --> Browse Car Directory")
  print("Input '2' --> Create Car Object")
  print("Input '3' --> Update Car Object")
  print("Input '4' --> Delete Car Directory")
  user_input = input('Please select input: ')
  while user_input not in ['0','1','2','3','4']:
    user_input = input('Please select input: ')

  if user_input == '0':
    main()
  elif user_input == '1':
    admin_read_car()
  elif user_input == '2':
    admin_create_car()
  elif user_input == '3':
    admin_update_car()
  elif user_input == '4':
    admin_delete_car()

"""### 2a. Admin Read Car"""

def admin_read_car():
  print()
  print("""    2a. Admin Browse Car

To filter by Manufacturer/Model/Color/Price type "column:value"
Blank or invalid input will result unfiltered data
Example: Model:Camry
  """)

  user_input = input("Enter Command: ")

  database_ava_key = list(database_ava.keys())
  tmp_available = dict()
  for x in database_car:
    if x in database_ava_key:
      tmp_available[x] = 'Rented'
    else:
      tmp_available[x] = 'Available'



  if len(user_input) == 0:
    print('ID      '+'Manufacturer     '+'Model     '+'Color     '+'Plate        '+'Price     '+'Status     ')
    for x in database_car:
      print(str(x)+' '*(7-len(str(x)))
        ,database_car[x]['Manufacturer']+' '*(16-len(database_car[x]['Manufacturer']))
        ,database_car[x]['Model']+' '*(9-len(database_car[x]['Model']))
        ,database_car[x]['Color']+' '*(9-len(database_car[x]['Color']))
        ,database_car[x]['Plate']+' '*(12-len(database_car[x]['Plate']))
        ,str(database_car[x]['Price'])+' '*(12-len(str(database_car[x]['Plate'])))
        ,tmp_available[x])
    admin_main()

  else:
    tmp = user_input.split(':')

    if tmp[0] in ['Manufacturer','Model','Color']:
      print('ID      '+'Manufacturer     '+'Model     '+'Color     '+'Plate        '+'Price     '+'Status     ')
      for x in database_car:
        if database_car[x][tmp[0]] == tmp[1]:
          print(str(x)+' '*(7-len(str(x)))
          ,database_car[x]['Manufacturer']+' '*(16-len(database_car[x]['Manufacturer']))
          ,database_car[x]['Model']+' '*(9-len(database_car[x]['Model']))
          ,database_car[x]['Color']+' '*(9-len(database_car[x]['Color']))
          ,database_car[x]['Plate']+' '*(12-len(database_car[x]['Plate']))
          ,str(database_car[x]['Price'])+' '*(12-len(str(database_car[x]['Plate'])))
        ,tmp_available[x])
      admin_main()

    elif tmp[0] == 'Price':
      print('ID      '+'Manufacturer     '+'Model     '+'Color     '+'Plate        '+'Price     '+'Status     ')
      for x in database_car:
        if database_car[x][tmp[0]] == int(tmp[1]):
          print(str(x)+' '*(7-len(str(x)))
          ,database_car[x]['Manufacturer']+' '*(16-len(database_car[x]['Manufacturer']))
          ,database_car[x]['Model']+' '*(9-len(database_car[x]['Model']))
          ,database_car[x]['Color']+' '*(9-len(database_car[x]['Color']))
          ,database_car[x]['Plate']+' '*(12-len(database_car[x]['Plate']))
          ,str(database_car[x]['Price'])+' '*(12-len(str(database_car[x]['Plate'])))
        ,tmp_available[x])
      admin_main()

    else:
      print('ID      '+'Manufacturer     '+'Model     '+'Color     '+'Plate        '+'Price     '+'Status     ')
      for x in database_car:
        print(str(x)+' '*(7-len(str(x)))
          ,database_car[x]['Manufacturer']+' '*(16-len(database_car[x]['Manufacturer']))
          ,database_car[x]['Model']+' '*(9-len(database_car[x]['Model']))
          ,database_car[x]['Color']+' '*(9-len(database_car[x]['Color']))
          ,database_car[x]['Plate']+' '*(12-len(database_car[x]['Plate']))
          ,str(database_car[x]['Price'])+' '*(12-len(str(database_car[x]['Plate'])))
        ,tmp_available[x])
      admin_main()

"""### 2b. Admin Create Car"""

def admin_create_car():
  print("    2b. Admin Create Car")
  print()
  tmp_Manufacturer = input('Please Input Manufacturer: ')
  while tmp_Manufacturer not in car_manufacturer_list:
    tmp_Manufacturer = input('Please Input Manufacturer: ')

  tmp_Model = input('Please Input Model: ')
  while tmp_Model not in car_model_list:
    tmp_Model = input('Please Input Model: ')

  tmp_Color = input('Please Input Color: ')
  while tmp_Color not in car_color_list:
    tmp_Color = input('Please Input Color: ')

  tmp_Plate = input('Please Input Plate: ')
  while len(tmp_Plate.strip()) > 11 or len(tmp_Plate.strip()) < 3 or tmp_Plate[0] in ['1','2','3','4','5','6','7','8','9','0'] or '  ' in tmp_Plate.strip() or '   ' in tmp_Plate.strip() or tmp_Plate[-1] in ['1','2','3','4','5','6','7','8','9','0']:
    tmp_Plate = input('Please Input Plate: ')

  tmp_Price = input('Please Input Price: ')
  while int(tmp_Price) < 100000:
    tmp_Price = input('Please Input Price: ')

  tmp_key = max(list(database_car.keys()))+1


  tmp_lst = [tmp_Manufacturer, tmp_Model, tmp_Color, tmp_Plate, int(tmp_Price)]
  print()
  print(tmp_lst, "\n")

  user_input = 0
  while user_input not in ['n','N','No','no','Yes','yes','y','Y']:
    user_input = input('Insert it to the database ? y/n: ')

  if user_input in ['y','Y','Yes','yes']:
    database_car[tmp_key]={'Manufacturer': tmp_Manufacturer, 'Model': tmp_Model, 'Color': tmp_Color, 'Plate': tmp_Plate, 'Price': tmp_Price}

  admin_main()

"""### 2c. Admin Update Car"""

def admin_update_car():
  user_input = 0
  key_list = list(database_car.keys())
  key_list_str = []

  print('    2c. Admin Update Car')
  print()

  for x in key_list:
    key_list_str.append(str(x))

  while user_input not in key_list_str:
    user_input = input('Enter Car ID: ')

  if user_input == 'exit':
    print(exit)

  else:
    user_input2 = '0'
    column_list = ['Manufacturer','Model','Color','Plate','Price']
    print()
    print('To Update the car write -> Column:Value')
    while ':' not in user_input2 or len(user_input2.split(':'))<2 or (user_input2.split(':'))[0] not in column_list:
      user_input2 = input('Input: ')

    splited = user_input2.split(':')
    temp_dict = database_car[int(user_input)]
    temp_dict[splited[0]] = splited[1]

    print(temp_dict)
    print()

    user_input3 = 0
    while user_input3 not in ['n','N','No','no','Yes','yes','y','Y']:
      user_input3 = input('Update it to the database ? y/n: ')

    if user_input3 in ['Yes','yes','y','Y']:
      database_car[int(user_input)] = temp_dict
  admin_main()

"""### 2d. Admin Delete Car"""

def admin_delete_car():
  user_input = 0
  key_list = list(database_car.keys())
  key_list_str = []
  print()
  print('    2d. Delete Car')
  print()

  for x in key_list:
    key_list_str.append(str(x))

  key_list_str.append('exit')

  while user_input not in key_list_str:
    user_input = input('Enter Car ID: ')

  if user_input == 'exit':
    print(exit)

  else:
    print(database_car[int(user_input)])
    user_input2 = input('Delete this car? y/n: ')

    while user_input2 not in ['y','Y','yes','Yes','N','n','no','No']:
      user_input2 = input('Delete this car? y/n: ')

    if user_input2 in ['Yes','yes','y','Y']:
      del database_car[int(user_input)]
  admin_main()

"""# 1. User View"""

def user_main():
  print()
  print('     1. User View')
  print('Current User: ',database_user[current_user])
  print('User ID: ',current_user)
  print()

  print("Input '0' --> 0. Main Function")
  print("Input '1' --> Browse Car")
  print("Input '2' --> Rent a Car")
  print("Input '3' --> Manage Your Order")
  user_input = input('Please select input: ')
  while user_input not in ['0','1','2','3']:
    user_input = input('Please select input: ')

  if user_input == '0':
    main()
  elif user_input == '1':
    user_read_car()
  elif user_input == '2':
    user_rent_car()
  elif user_input == '3':
    manage_rent()

"""### 1a. User Read Car"""

def user_read_car():
  print()
  print("""    1a. Browser Car

To filter by Manufacturer/Model/Color/Price type "column:value"
Blank or invalid input will result unfiltered data
Example: Model:Camry
  """)

  user_input = input("Enter Command: ")

  database_ava_key = list(database_ava.keys())
  tmp_available = dict()
  for x in database_car:
    if x in database_ava_key:
      tmp_available[x] = 'Rented'
    else:
      tmp_available[x] = 'Available'



  if len(user_input) == 0:
    print('ID      '+'Manufacturer     '+'Model     '+'Color     '+'Plate        '+'Price     '+'Status     ')
    for x in database_car:
      print(str(x)+' '*(7-len(str(x)))
        ,database_car[x]['Manufacturer']+' '*(16-len(database_car[x]['Manufacturer']))
        ,database_car[x]['Model']+' '*(9-len(database_car[x]['Model']))
        ,database_car[x]['Color']+' '*(9-len(database_car[x]['Color']))
        ,database_car[x]['Plate']+' '*(12-len(database_car[x]['Plate']))
        ,str(database_car[x]['Price'])+' '*(12-len(str(database_car[x]['Plate'])))
        ,tmp_available[x])
    user_main()

  else:
    tmp = user_input.split(':')

    if tmp[0] in ['Manufacturer','Model','Color']:
      print('ID      '+'Manufacturer     '+'Model     '+'Color     '+'Plate        '+'Price     '+'Status     ')
      for x in database_car:
        if database_car[x][tmp[0]] == tmp[1]:
          print(str(x)+' '*(7-len(str(x)))
          ,database_car[x]['Manufacturer']+' '*(16-len(database_car[x]['Manufacturer']))
          ,database_car[x]['Model']+' '*(9-len(database_car[x]['Model']))
          ,database_car[x]['Color']+' '*(9-len(database_car[x]['Color']))
          ,database_car[x]['Plate']+' '*(12-len(database_car[x]['Plate']))
          ,str(database_car[x]['Price'])+' '*(12-len(str(database_car[x]['Plate'])))
        ,tmp_available[x])
      user_main()

    elif tmp[0] == 'Price':
      print('ID      '+'Manufacturer     '+'Model     '+'Color     '+'Plate        '+'Price     '+'Status     ')
      for x in database_car:
        if database_car[x][tmp[0]] == int(tmp[1]):
          print(str(x)+' '*(7-len(str(x)))
          ,database_car[x]['Manufacturer']+' '*(16-len(database_car[x]['Manufacturer']))
          ,database_car[x]['Model']+' '*(9-len(database_car[x]['Model']))
          ,database_car[x]['Color']+' '*(9-len(database_car[x]['Color']))
          ,database_car[x]['Plate']+' '*(12-len(database_car[x]['Plate']))
          ,str(database_car[x]['Price'])+' '*(12-len(str(database_car[x]['Plate'])))
        ,tmp_available[x])
      user_main()

    else:
      print('ID      '+'Manufacturer     '+'Model     '+'Color     '+'Plate        '+'Price     '+'Status     ')
      for x in database_car:
        print(str(x)+' '*(7-len(str(x)))
          ,database_car[x]['Manufacturer']+' '*(16-len(database_car[x]['Manufacturer']))
          ,database_car[x]['Model']+' '*(9-len(database_car[x]['Model']))
          ,database_car[x]['Color']+' '*(9-len(database_car[x]['Color']))
          ,database_car[x]['Plate']+' '*(12-len(database_car[x]['Plate']))
          ,str(database_car[x]['Price'])+' '*(12-len(str(database_car[x]['Plate'])))
        ,tmp_available[x])
      user_main()

"""### 1b. User Rent Car"""

def user_rent_car():
  print()
  print('    1b. Rent Car')
  print()
  print('which car do you want to rent?')

  key_list = list(database_car.keys())
  key_list_str = []
  for x in key_list:
    key_list_str.append(str(x))

  database_ava_key = database_ava.keys()
  database_ava_key_str = []
  for x in database_ava_key:
    database_ava_key_str.append(str(x))

  user_input = input('Enter the car ID: ')
  while user_input in database_ava_key_str or user_input not in key_list_str:
    user_input = input('Enter the car ID: ')

  if user_input in key_list_str:
    tmp_days = input('How many days: ')
    while tmp_days in ['ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^*()_-']:
      tmp_days = input('How many days: ')

    print('The cost will be:', int(tmp_days)*database_car[int(user_input)]['Price'])
    user_input2 = input('Confirm rent order? y/n: ')
    while user_input2 not in ['y','Y','yes','Yes','N','n','no','No']:
      user_input2 = input('Confirm rent order? y/n: ')

    if user_input2 in ['Yes','yes','y','Y']:
      database_ava[int(user_input)] = {'User':current_user,'Duration':int(tmp_days)}
      print('Thank you for your purchase!')
      print()
  user_main()

"""### 1c. User Manage Rent"""

def manage_rent():
  print()
  user_car = list()
  user_car_id_only = list()
  for x in database_ava:
    if database_ava[x]['User'] == current_user:
      user_car_id_only.append(x)
      user_car.append([x,database_car[x],database_ava[x]['Duration']])

  def view_rent():
    print()
    print('ID      '+'Manufacturer     '+'Model     '+'Color     '+'Plate        '+'Price     '+'Duration     ')
    for x in user_car:
      print(str(x[0])+' '*(7-len(str(x[0])))
      ,database_car[x[0]]['Manufacturer']+' '*(16-len(database_car[x[0]]['Manufacturer']))
      ,database_car[x[0]]['Model']+' '*(9-len(database_car[x[0]]['Model']))
      ,database_car[x[0]]['Color']+' '*(9-len(database_car[x[0]]['Color']))
      ,database_car[x[0]]['Plate']+' '*(12-len(database_car[x[0]]['Plate']))
      ,str(database_car[x[0]]['Price'])+' '*(9-len(str(database_car[x[0]]['Price'])))
      ,x[2])
    manage_rent()

  def delete_rent_car():
    user_input = input('Please Input the Car ID to Delete: ')
    del database_ava[int(user_input)]
    print('Delete Success')
    manage_rent()

  def extend_rent_car():
    user_input = input('Please Input the Car ID to Extend: ')
    while user_input.isnumeric() == False or int(user_input) not in user_car_id_only:
      user_input = input('Please Input the Car ID to Extend: ')

    tmp_add_duration = input('How many days to extend?: ')
    while tmp_add_duration.isnumeric() == False:
      tmp_add_duration = input('How many days to extend?: ')

    database_ava[int(user_input)]['Duration']=database_ava[int(user_input)]['Duration']+int(tmp_add_duration)
    print('Duration Has Been Modified')
    manage_rent()

  print('    1c. Manage Rented Car')
  print("Input '0' --> user_main()")
  print("Input '1' --> View Rented Car")
  print("Input '2' --> Delete Rented Car")
  print("Input '3' --> Extend Rented Car")

  user_input = input('Enter menu? ')
  if user_input == str(0):
    user_main()

  elif user_input == str(1):
    view_rent()

  elif user_input == str(2):
    delete_rent_car()

  elif user_input == str(3):
    extend_rent_car()